{"name": "test_catalog[xpath-//*[@href='/tv/']-https://www.21vek.by/tv/]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@href='/tv/']\"}\n  (Session info: chrome=121.0.6167.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010283a814 chromedriver + 4040724\n1   chromedriver                        0x0000000102832a18 chromedriver + 4008472\n2   chromedriver                        0x00000001024a5870 chromedriver + 284784\n3   chromedriver                        0x00000001024e9080 chromedriver + 561280\n4   chromedriver                        0x0000000102523048 chromedriver + 798792\n5   chromedriver                        0x00000001024dd74c chromedriver + 513868\n6   chromedriver                        0x00000001024de044 chromedriver + 516164\n7   chromedriver                        0x00000001027ffa3c chromedriver + 3799612\n8   chromedriver                        0x0000000102803f1c chromedriver + 3817244\n9   chromedriver                        0x00000001027e8298 chromedriver + 3703448\n10  chromedriver                        0x0000000102804a64 chromedriver + 3820132\n11  chromedriver                        0x00000001027db054 chromedriver + 3649620\n12  chromedriver                        0x0000000102821e74 chromedriver + 3939956\n13  chromedriver                        0x0000000102821fec chromedriver + 3940332\n14  chromedriver                        0x0000000102832698 chromedriver + 4007576\n15  libsystem_pthread.dylib             0x000000018baa6034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8", "trace": "self = <test_mainpage.TestMainPage object at 0x1048a9280>\ndriver_chrome = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"be03ea00ca149af58fbcb3f10244f68d\")>, locator_type = 'xpath'\nlocator_value = \"//*[@href='/tv/']\", url = 'https://www.21vek.by/tv/'\n\n    @pytest.mark.parametrize(\"locator_type, locator_value, url\", [\n        (*Locators.MAIN_CAT_ALL_OFFERS, \"https://www.21vek.by/special_offers/promo.html\"),\n        (*Locators.MAIN_CAT_OFFERS,\n         \"https://www.21vek.by/special_offers/promo.html?discountTypes=sale\"),\n        (*Locators.MAIN_CAT_TIRES, \"https://www.21vek.by/tires/\"),\n        (*Locators.MAIN_CAT_REFREG, \"https://www.21vek.by/refrigerators/\"),\n        (*Locators.MAIN_CAT_MOBILE, \"https://www.21vek.by/mobile/\"),\n        (*Locators.MAIN_CAT_NOTEBOOK, \"https://www.21vek.by/notebooks/\"),\n        (*Locators.MAIN_CAT_TV, \"https://www.21vek.by/tv/\"),\n        (*Locators.MAIN_CAT_VACUUM, \"https://www.21vek.by/vacuum/\"),\n        (*Locators.MAIN_CAT_MATRAS, \"https://www.21vek.by/mattresses/\"),\n        (*Locators.MAIN_CAT_SOFAS, \"https://www.21vek.by/cushioned_furniture/\"),\n        (*Locators.MAIN_CAT_KITCHEN, \"https://www.21vek.by/kitchen_furniture/\"),\n        (*Locators.MAIN_CAT_BATTERIES, \"https://www.21vek.by/car_batteries/\")\n    ])\n    def test_catalog(self, driver_chrome, locator_type, locator_value, url):\n        catalog = MainPage(driver_chrome, \"https://www.21vek.by\")\n        catalog.open()\n>       catalog.catalog(locator_type, locator_value)\n\ntests/test_mainpage.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_object/mainpage.py:11: in catalog\n    self.find_click_element(locator_type, locator_value)\npage_object/basepage.py:15: in find_click_element\n    element = self.driver_chrome.find_element(*locator)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10490e060>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018baa6034 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@href='/tv/']\"}\nE         (Session info: chrome=121.0.6167.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010283a814 chromedriver + 4040724\nE       1   chromedriver                        0x0000000102832a18 chromedriver + 4008472\nE       2   chromedriver                        0x00000001024a5870 chromedriver + 284784\nE       3   chromedriver                        0x00000001024e9080 chromedriver + 561280\nE       4   chromedriver                        0x0000000102523048 chromedriver + 798792\nE       5   chromedriver                        0x00000001024dd74c chromedriver + 513868\nE       6   chromedriver                        0x00000001024de044 chromedriver + 516164\nE       7   chromedriver                        0x00000001027ffa3c chromedriver + 3799612\nE       8   chromedriver                        0x0000000102803f1c chromedriver + 3817244\nE       9   chromedriver                        0x00000001027e8298 chromedriver + 3703448\nE       10  chromedriver                        0x0000000102804a64 chromedriver + 3820132\nE       11  chromedriver                        0x00000001027db054 chromedriver + 3649620\nE       12  chromedriver                        0x0000000102821e74 chromedriver + 3939956\nE       13  chromedriver                        0x0000000102821fec chromedriver + 3940332\nE       14  chromedriver                        0x0000000102832698 chromedriver + 4007576\nE       15  libsystem_pthread.dylib             0x000000018baa6034 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "locator_type", "value": "'xpath'"}, {"name": "locator_value", "value": "'//*[@href='/tv/']'"}, {"name": "url", "value": "'https://www.21vek.by/tv/'"}], "start": 1708418986981, "stop": 1708418992347, "uuid": "0f37440b-e86e-4237-9176-0fba8b162056", "historyId": "c8953ba797d5f8807a35e8e05e05dd03", "testCaseId": "767ce1ceabc1e17ec6badce9c9fa0990", "fullName": "tests.test_mainpage.TestMainPage#test_catalog", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_mainpage"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "Ivans-Laptop.local"}, {"name": "thread", "value": "24859-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_mainpage"}]}