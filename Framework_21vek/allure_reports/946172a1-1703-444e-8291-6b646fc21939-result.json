{"name": "test_catalog[xpath-//*[@href='/tv/']-https://www.21vek.by/tv/]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@href='/tv/']\"}\n  (Session info: chrome=121.0.6167.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x00000001045aa814 chromedriver + 4040724\n1   chromedriver                        0x00000001045a2a18 chromedriver + 4008472\n2   chromedriver                        0x0000000104215870 chromedriver + 284784\n3   chromedriver                        0x0000000104259080 chromedriver + 561280\n4   chromedriver                        0x0000000104293048 chromedriver + 798792\n5   chromedriver                        0x000000010424d74c chromedriver + 513868\n6   chromedriver                        0x000000010424e044 chromedriver + 516164\n7   chromedriver                        0x000000010456fa3c chromedriver + 3799612\n8   chromedriver                        0x0000000104573f1c chromedriver + 3817244\n9   chromedriver                        0x0000000104558298 chromedriver + 3703448\n10  chromedriver                        0x0000000104574a64 chromedriver + 3820132\n11  chromedriver                        0x000000010454b054 chromedriver + 3649620\n12  chromedriver                        0x0000000104591e74 chromedriver + 3939956\n13  chromedriver                        0x0000000104591fec chromedriver + 3940332\n14  chromedriver                        0x00000001045a2698 chromedriver + 4007576\n15  libsystem_pthread.dylib             0x000000018baa6034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8", "trace": "driver_chrome = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f0fca32eaf5f24ca8d7e3be750b66b39\")>, locator_type = 'xpath'\nlocator_value = \"//*[@href='/tv/']\", url = 'https://www.21vek.by/tv/'\n\n    @pytest.mark.parametrize(\"locator_type, locator_value, url\", [\n            (*Locators.MAIN_CAT_ALL_OFFERS, \"https://www.21vek.by/special_offers/promo.html\"),\n            (*Locators.MAIN_CAT_OFFERS,\n             \"https://www.21vek.by/special_offers/promo.html?discountTypes=sale\"),\n            (*Locators.MAIN_CAT_TIRES, \"https://www.21vek.by/tires/\"),\n            (*Locators.MAIN_CAT_REFREG, \"https://www.21vek.by/refrigerators/\"),\n            (*Locators.MAIN_CAT_MOBILE, \"https://www.21vek.by/mobile/\"),\n            (*Locators.MAIN_CAT_NOTEBOOK, \"https://www.21vek.by/notebooks/\"),\n            (*Locators.MAIN_CAT_TV, \"https://www.21vek.by/tv/\"),\n            (*Locators.MAIN_CAT_VACUUM, \"https://www.21vek.by/vacuum/\"),\n            (*Locators.MAIN_CAT_MATRAS, \"https://www.21vek.by/mattresses/\"),\n            (*Locators.MAIN_CAT_SOFAS, \"https://www.21vek.by/cushioned_furniture/\"),\n            (*Locators.MAIN_CAT_KITCHEN, \"https://www.21vek.by/kitchen_furniture/\"),\n            (*Locators.MAIN_CAT_BATTERIES, \"https://www.21vek.by/car_batteries/\")\n        ])\n    def test_catalog(driver_chrome, locator_type, locator_value, url):\n>       catalog_link = driver_chrome.find_element(locator_type, locator_value)\n\ntests/test_pytest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x104a3b890>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018baa6034 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@href='/tv/']\"}\nE         (Session info: chrome=121.0.6167.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x00000001045aa814 chromedriver + 4040724\nE       1   chromedriver                        0x00000001045a2a18 chromedriver + 4008472\nE       2   chromedriver                        0x0000000104215870 chromedriver + 284784\nE       3   chromedriver                        0x0000000104259080 chromedriver + 561280\nE       4   chromedriver                        0x0000000104293048 chromedriver + 798792\nE       5   chromedriver                        0x000000010424d74c chromedriver + 513868\nE       6   chromedriver                        0x000000010424e044 chromedriver + 516164\nE       7   chromedriver                        0x000000010456fa3c chromedriver + 3799612\nE       8   chromedriver                        0x0000000104573f1c chromedriver + 3817244\nE       9   chromedriver                        0x0000000104558298 chromedriver + 3703448\nE       10  chromedriver                        0x0000000104574a64 chromedriver + 3820132\nE       11  chromedriver                        0x000000010454b054 chromedriver + 3649620\nE       12  chromedriver                        0x0000000104591e74 chromedriver + 3939956\nE       13  chromedriver                        0x0000000104591fec chromedriver + 3940332\nE       14  chromedriver                        0x00000001045a2698 chromedriver + 4007576\nE       15  libsystem_pthread.dylib             0x000000018baa6034 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018baa0e3c thread_start + 8\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "locator_type", "value": "'xpath'"}, {"name": "locator_value", "value": "'//*[@href='/tv/']'"}, {"name": "url", "value": "'https://www.21vek.by/tv/'"}], "start": 1708419124227, "stop": 1708419129257, "uuid": "cb724f84-4d8a-411a-a4b2-d0aa340663f8", "historyId": "b298ab8be58252c20a13c5e4a10c852b", "testCaseId": "947fdd60ab6153c659f1a039fdf477e7", "fullName": "tests.test_pytest#test_catalog", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_pytest"}, {"name": "host", "value": "Ivans-Laptop.local"}, {"name": "thread", "value": "24859-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_pytest"}]}